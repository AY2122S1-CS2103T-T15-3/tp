@startuml
!include ../../../style.puml

Participant ":SortCommand" as sc LOGIC_COLOR
Participant ":ModelManager" as mm LOGIC_COLOR
Participant ":ObservableList" as ol LOGIC_COLOR
Participant ":ArrayList" as al LOGIC_COLOR
Participant ":AcademyDirectory" as ad LOGIC_COLOR
Participant ":UniqueStudentList" as usl LOGIC_COLOR
Participant ":AcademyDirectory" as mad LOGIC_COLOR
Participant ":UniqueStudentList" as musl LOGIC_COLOR
Participant ":CommandResult" as cr LOGIC_COLOR


[-> sc : execute(model)
activate sc
sc -> mm ++: getFilteredStudentList
mm --> sc --: students
ref over sc : GetComparator

create al
sc -> al ++ : ArrayList
al --> sc --: sortedList
sc -> al ++ : addAll(students)
al --> sc --
sc -> al ++ : sort(comparator)
al --> sc --
sc -> sc ++ : getResultString
sc --> sc -- : result

create ad
sc -> ad ++ : AcademyDirectory
ad --> sc -- : sortedAcademyDirectory

sc -> ad ++ : setStudents(sortedList)
ad -> usl ++ : setStudents(sortedList)
usl --> ad --
ad --> sc --

sc -> mm ++ : setAcademyDirectory(sortedAcademyDirectory)
mm -> mad ++ : resetData(sortedAcademyDirectory)
mad -> mad ++ : getStudentList
mad --> mad -- : newStudentList
mad -> musl ++ : setStudents(newStudentList)
musl --> mad --
mad --> mm --
mm --> sc --
sc -> mm ++ : updateFilteredStudentsList(PREDICATE_SHOW_ALL_STUDENTS)
mm -> fl ++ : setPredicate(PREDICATE_SHOW_ALL_STUDENTS)
fl --> mm --
mm --> sc --

create cr
sc -> cr ++ : CommandResult(MESSAGE_UPDATE_ATTENDANCE_SUCCESS)
cr --> sc -- : command result
<-- sc : command result

@enduml
